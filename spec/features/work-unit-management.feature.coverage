{
  "scenarios": [
    {
      "name": "Create work unit with auto-incrementing ID",
      "testMappings": []
    },
    {
      "name": "Create second work unit with incremented ID",
      "testMappings": []
    },
    {
      "name": "Create work unit with epic assignment",
      "testMappings": []
    },
    {
      "name": "Create work unit with description",
      "testMappings": []
    },
    {
      "name": "Create child work unit with parent",
      "testMappings": []
    },
    {
      "name": "Attempt to create work unit with unregistered prefix",
      "testMappings": []
    },
    {
      "name": "Attempt to create work unit with missing title",
      "testMappings": []
    },
    {
      "name": "Attempt to create child with non-existent parent",
      "testMappings": []
    },
    {
      "name": "Update work unit title",
      "testMappings": []
    },
    {
      "name": "Update work unit description",
      "testMappings": []
    },
    {
      "name": "Update work unit epic",
      "testMappings": []
    },
    {
      "name": "Attempt to update work unit with invalid epic",
      "testMappings": []
    },
    {
      "name": "Show single work unit details",
      "testMappings": []
    },
    {
      "name": "Show work unit with JSON output",
      "testMappings": []
    },
    {
      "name": "Show work unit with linked feature files and scenarios",
      "testMappings": []
    },
    {
      "name": "Show work unit with scenario-level tags",
      "testMappings": []
    },
    {
      "name": "Show work unit with no linked features",
      "testMappings": []
    },
    {
      "name": "Show work unit with JSON output including linked features",
      "testMappings": []
    },
    {
      "name": "Show work unit with multiple feature files",
      "testMappings": []
    },
    {
      "name": "List all work units",
      "testMappings": []
    },
    {
      "name": "List work units filtered by status",
      "testMappings": []
    },
    {
      "name": "List work units filtered by prefix",
      "testMappings": []
    },
    {
      "name": "List work units filtered by epic",
      "testMappings": []
    },
    {
      "name": "Delete work unit with no dependencies",
      "testMappings": []
    },
    {
      "name": "Force delete work unit without confirmation",
      "testMappings": []
    },
    {
      "name": "Attempt to delete work unit with children",
      "testMappings": []
    },
    {
      "name": "Attempt to delete work unit that blocks other work",
      "testMappings": []
    },
    {
      "name": "Create nested work unit hierarchy",
      "testMappings": []
    },
    {
      "name": "Attempt to create circular parent relationship",
      "testMappings": []
    },
    {
      "name": "Attempt to exceed maximum nesting depth",
      "testMappings": []
    },
    {
      "name": "Validate work unit data structure",
      "testMappings": []
    },
    {
      "name": "Attempt to perform operations on non-existent work unit",
      "testMappings": []
    },
    {
      "name": "Auto-create work-units.json when missing",
      "testMappings": []
    },
    {
      "name": "Auto-create prefixes.json when reading work units",
      "testMappings": []
    },
    {
      "name": "Auto-create epics.json when needed for work unit operations",
      "testMappings": []
    },
    {
      "name": "Complete end-to-end work unit to feature linking workflow",
      "testMappings": []
    },
    {
      "name": "Remove work unit tag from feature and verify unlinking",
      "testMappings": []
    }
  ],
  "stats": {
    "totalScenarios": 37,
    "coveredScenarios": 0,
    "coveragePercent": 0,
    "testFiles": [],
    "implFiles": [],
    "totalLinesCovered": 0
  }
}